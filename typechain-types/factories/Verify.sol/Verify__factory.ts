/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Verify, VerifyInterface } from "../../Verify.sol/Verify";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVerifier",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104d13803806104d1833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b6103a8806101296000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063dff6641614610030575b600080fd5b61004a6004803603810190610045919061015b565b610060565b60405161005791906101df565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f5c9d69e868686866040518563ffffffff1660e01b81526004016100c294939291906102d2565b602060405180830381865afa1580156100df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101039190610345565b9050949350505050565b600080fd5b600080fd5b60008190508260206002028201111561013357610132610112565b5b92915050565b60008190508260406002028201111561015557610154610112565b5b92915050565b60008060008061014085870312156101765761017561010d565b5b600061018487828801610117565b945050604061019587828801610139565b93505060c06101a687828801610117565b9250506101006101b887828801610117565b91505092959194509250565b60008115159050919050565b6101d9816101c4565b82525050565b60006020820190506101f460008301846101d0565b92915050565b82818337505050565b61020f604083836101fa565b5050565b600060029050919050565b600081905092915050565b6000819050919050565b61023f604083836101fa565b5050565b600061024f8383610233565b60408301905092915050565b600082905092915050565b6000604082019050919050565b61027c81610213565b610286818461021e565b925061029182610229565b8060005b838110156102ca576102a7828461025b565b6102b18782610243565b96506102bc83610266565b925050600181019050610295565b505050505050565b6000610140820190506102e86000830187610203565b6102f56040830186610273565b61030260c0830185610203565b610310610100830184610203565b95945050505050565b610322816101c4565b811461032d57600080fd5b50565b60008151905061033f81610319565b92915050565b60006020828403121561035b5761035a61010d565b5b600061036984828501610330565b9150509291505056fea2646970667358221220caaf96f0a5b13459d73bfabac64ad24fdd8b422c9873a20de9ec4513e9d3b74d64736f6c63430008110033";

type VerifyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verify__factory extends ContractFactory {
  constructor(...args: VerifyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verify> {
    return super.deploy(_verifier, overrides || {}) as Promise<Verify>;
  }
  override getDeployTransaction(
    _verifier: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override attach(address: string): Verify {
    return super.attach(address) as Verify;
  }
  override connect(signer: Signer): Verify__factory {
    return super.connect(signer) as Verify__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyInterface {
    return new utils.Interface(_abi) as VerifyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Verify {
    return new Contract(address, _abi, signerOrProvider) as Verify;
  }
}
